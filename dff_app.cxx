// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "dff_app.h"
#include "Diff.h"
#include <string>
string stack;
string out;
   string input;

void callback_button( Fl_Widget* widg, void* userdata ) {

      string text = input_box->value();
        std::cout << "f(x) = " << text<< endl;
       out = Differentiate(text);
       std::cout << "df/dx = " << out<< endl;
      output_box->value( out.c_str() );
      




      }
      

Fl_Input *input_box=(Fl_Input *)0;

Fl_Output *output_box=(Fl_Output *)0;

int main(int argc, char **argv) {

    
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(605, 180, "Derivative Calculator");
    w = o; if (w) {/* empty */}
    o->align(Fl_Align(FL_ALIGN_LEFT));
    { input_box = new Fl_Input(60, 30, 345, 45, "f(x) =");
    } // Fl_Input* input_box
    // { Fl_Text_Display* o = new Fl_Text_Display(435, 30, 15, 45, ")/dx");
    //   o->box(FL_NO_BOX);
    //   o->align(Fl_Align(FL_ALIGN_LEFT));
    // } // Fl_Text_Display* o
    { output_box = new Fl_Output(60, 105, 345, 45, "df/dx =");
    } // Fl_Output* output_box
    { Fl_Button* o = new Fl_Button(445, 30, 125, 120, "Compute Derivative");
      o->box(FL_UP_BOX);
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)callback_button);
    } // Fl_Button* o
    o->end();
  } // Fl_Double_Window* o
  w->show(argc, argv);
  return Fl::run();
}
